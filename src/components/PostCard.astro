---
import {Image} from "astro:assets";
import type {ImageMetadata} from "astro";
export interface Props {
  url: string;
  title: string;
  description: string;
  category: string;
  date: Date;
  readingTime: number;
  image?: string;
  imageAlt?: string;
  tags?: string[];
}

const { url, title, description, category, date, readingTime, image, imageAlt, tags } = Astro.props as Props;

// Format the date for display. Example: "January 1, 2023"
const formattedDate = date.toLocaleDateString('en-US', {
  month: 'long',
  day: 'numeric',
  year: 'numeric'
});

const images = image ? import.meta.glob<{default: ImageMetadata }>(`/src/images/**/*.{jpeg,jpg,png}`) : undefined;
let heroImage
if (images && `/src/images/${image}` in images) {
  heroImage = images[`/src/images/${image}`]()
}
---
<div>
  <article class="post-card bg-surface p-4 ">
    <div class="post-card-image mb-2">
      {heroImage && (
        <Image
          src={heroImage}
          alt={imageAlt || title}
          width={600}
          height={400}
          layout="full-width"
          fit="cover"
          quality='high'
        />
      )}
    </div>
    <div class="post-card-content">
      <div class="post-card-category mb-2">
          <a href={`/blog/category/${category}`} class="post-card-category-link text-primary font-heading text-paragraph font-bold mb-4 capitalize">
            {category}
          </a>
      </div>
      <h2 class="post-card-title text-primary-text font-heading text-subsection-title font-bold">
        <a href={url}>{title}</a>
      </h2>
      <p class="post-card-description text-secondary-text font-body text-paragraph text-justify">
        {description}
      </p>
      <div class="post-card-meta mt-4">
        <div class="post-card-meta-info flex justify-between gap-4 text-primary-text font-body text-caption my-4">
          <time datetime={date.toISOString()} class="post-card-date">
            📅 {formattedDate}
          </time>
          <span class="post-card-reading-time">
            🕒 {readingTime} min read
        </span>
        </div>
        {tags && tags.length > 0 && (
          <div class="flex flex-wrap gap-2 mt-2 md:mt-0">
            <span class="font-heading text-primary-text text-caption m-2">🏷️</span>
            {tags.map(tag => (
              <span class=" font-heading text-primary text-caption underline my-2">
                #{tag}
              </span>
            ))}
          </div>
        )}
      </div>
    </div>
  </article>
</div>


